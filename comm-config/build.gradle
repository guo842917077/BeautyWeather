apply plugin: 'com.android.library'

def enableBinding = rootProject.ext.enableDataBinding
def androidCompile = rootProject.ext.androidCompile
def isDebug = rootProject.ext.isDebug
def importLibrary = rootProject.ext.dependencies
android {
    compileSdkVersion androidCompile.compileSdkVersion

    defaultConfig {
        minSdkVersion androidCompile.minSdkVersion
        targetSdkVersion androidCompile.targetSdkVersion
        versionCode androidCompile.versionCode
        versionName androidCompile.versionName


        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        dataBinding {
            enabled enableBinding
        }

        externalNativeBuild {
            cmake {
                arguments "-DANDROID_ARM_NEON=ON", "-DANDROID_TOOLCHAIN=clang"
                abiFilters "arm64-v8a"
                cppFlags "-std=c++11 -frtti -fexceptions"
            }
        }
        ndk {
            ldLibs "log"
            abiFilters "arm64-v8a" // "armeabi", "x86", "arm64-v8a"
        }
    }
    externalNativeBuild {
        cmake {
            path file('CMakeLists.txt')
        }
    }
    sourceSets.main {
        jni.srcDirs = ['src/main/cpp']
        jniLibs.srcDirs = ['src/main/jniLibs']
    }
    buildTypes {
        debug {
            buildConfigField("boolean", "IsDebug", String.valueOf(isDebug))
        }
        release {
            buildConfigField("boolean", "IsDebug", String.valueOf(isDebug))
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
}