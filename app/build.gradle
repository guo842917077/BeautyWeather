apply plugin: 'com.android.application'

def androidCompile = rootProject.ext.androidCompile
def isDebug = rootProject.ext.isDebug
def importLibrary = rootProject.ext.dependencies
def appId = rootProject.ext.appId
android {
    compileSdkVersion androidCompile.compileSdkVersion

    defaultConfig {
        applicationId appId.hostId
        minSdkVersion androidCompile.minSdkVersion
        targetSdkVersion androidCompile.targetSdkVersion
        versionCode androidCompile.versionCode
        versionName androidCompile.versionName
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    buildTypes {
        debug {
            buildConfigField("boolean", "IsDebug", String.valueOf(isDebug))
        }

        release {
            buildConfigField("boolean", "IsDebug", String.valueOf(isDebug))
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation importLibrary["constraintLayout"]
    implementation importLibrary["androidxCompat"]
    implementation importLibrary["lifeRuntime"]
    implementation importLibrary["lifeExtensions"]
    implementation importLibrary["lifeCompiler"]
    implementation importLibrary["arouter-api"]
}